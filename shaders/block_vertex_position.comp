#ifndef BLOCK_VERTEX_POSITION_COMP
#define BLOCK_VERTEX_POSITION_COMP

// Quantized positions are packed into a u32, with 10 bits
// per position. Stored as [x, y, z], with the highest 2 bits unused

// Quantize the position within the block [0, 5] to 10 bit uint coordinates
#define QUANTIZED_COORD_MAX 1023
uint compress_position(vec3 p)
{
    uvec3 quantized = uvec3(((p - 0.5) * 0.25) * QUANTIZED_COORD_MAX);
    uint compressed = 0;
    compressed |= (quantized.x & 0x000003ff) << 20;
    compressed |= (quantized.y & 0x000003ff) << 10;
    compressed |=  quantized.z & 0x000003ff;
    return compressed;
}

vec3 decompress_position(uint compressed)
{
    vec3 quantized = vec3(
            ((compressed & 0x3ff00000) >> 20),
            ((compressed & 0x000ffc00) >> 10),
             (compressed & 0x000003ff));
    return (quantized * 4.0) / QUANTIZED_COORD_MAX + 0.5;
}

#endif

