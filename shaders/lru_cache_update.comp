#version 450 core

#include "lru_cache_inputs.comp"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 1, binding = 0, std430) buffer NewItemIDs
{
    uint new_items[];
};

void main(void)
{
    const uint item = new_items[gl_GlobalInvocationID.x];
    const uint slot = slot_available_id[gl_GlobalInvocationID.x];
    const int prev = slot_item_id[slot];
    // Evict the previous item, if there was one in this slot
    if (prev != -1) {
        cached_item_slot[prev] = -1;
    }

    slot_age[slot] = 0;
    slot_item_id[slot] = int(item);
    slot_available[slot] = 0;
    cached_item_slot[item] = int(slot);
}

