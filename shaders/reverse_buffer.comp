#version 450 core

#include "sort_data.comp"

layout(set = 1, binding = 0, std430) buffer Values
{
    uint values[];
};

void main(void)
{
    // Each thread swaps a pair of elements in place
    const uint aligned_size = next_pow2(uint(ceil(float(size) / SORT_CHUNK_SIZE))) * SORT_CHUNK_SIZE;
    if (aligned_size < SORT_CHUNK_SIZE && gl_GlobalInvocationID.x > SORT_CHUNK_SIZE / 2) {
        return;
    }
    const uint i = gl_GlobalInvocationID.x;
    const uint j = aligned_size - gl_GlobalInvocationID.x - 1;
    const uint tmp = values[i];
    values[i] = values[j];
    values[j] = tmp;
}

