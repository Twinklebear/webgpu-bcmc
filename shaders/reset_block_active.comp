#version 450 core

layout(local_size_x = 8, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, std140) uniform VolumeParams
{
    uvec4 volume_dims;
    uvec4 padded_dims;
    vec4 volume_scale;
    uint max_bits;
    float isovalue;
};

layout(set = 0, binding = 1, std430) buffer BlockActive
{
    uint block_active[];
};

layout(set = 0, binding = 2, std430) buffer BlockVisible
{
    uint block_visible[];
};

// Resetting the blocks active flag is split to a separate stage so that we
// don't have a read-write conflict where some threads try to mark it active
// while another is resetting it to inactive
void main(void)
{
    const uvec3 n_blocks = padded_dims.xyz / uvec3(4);
    if (gl_GlobalInvocationID.x >= n_blocks.x) {
        return;
    }

    const uint block_id = gl_GlobalInvocationID.x + n_blocks.x
        * (gl_GlobalInvocationID.y + n_blocks.y * gl_GlobalInvocationID.z);

    block_active[block_id] = 0;
    block_visible[block_id] = 0;
}

