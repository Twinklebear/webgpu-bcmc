#version 450 core

#include "lru_cache_inputs.comp"

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(set = 1, binding = 0, std140) uniform OldSize
{
    uint old_size;
};

layout(set = 2, binding = 0, std140) uniform WorkItemOffset
{
    uint work_item_offset;
    uint total_work_groups;
    uint cache_size;
};

void main(void)
{
    // TODO: need to check against cache size
    // Initialize each new empty slot
    const uint item_idx = old_size + work_item_offset * 32 + gl_GlobalInvocationID.x;
    if (item_idx >= cache_size) {
        return;
    }
    slot_data[item_idx].age = 100000;
    slot_data[item_idx].available = 1;
    slot_data[item_idx].item_id = -1;
}

