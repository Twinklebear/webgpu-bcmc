#version 450 core

#include "lru_cache_inputs.comp"

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(set = 1, binding = 0, std430) buffer Output
{
    uint out_buf[];
};


layout(set = 2, binding = 0, std140) uniform WorkItemOffset
{
    uint work_item_offset;
    uint total_work_groups;
    uint cache_size;
};

void main(void)
{
    const uint work_item_id = work_item_offset * 32 + gl_GlobalInvocationID.x;
    if (work_item_id >= cache_size) {
        return;
    }
    out_buf[work_item_id] = slot_data[work_item_id].available;
}

